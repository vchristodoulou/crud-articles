{"version":3,"sources":["services/article.service.js","components/Articles/Article/index.js","services/category.service.js","components/Articles/index.js","components/Articles/create/index.js","components/Articles/view/index.js","components/Articles/edit/index.js","components/Categories/create/index.js","components/Categories/delete/index.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","process","axios","get","category","id","title","article","post","content","delete","Article","props","window","confirm","ArticleService","deleteById","this","then","response","onDeleteArticle","error","console","log","deleteByTitle","description","category_name","selectedCategoryName","className","type","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","to","onClick","onDeleteById","onDeleteByTitle","Component","name","Articles","state","articles","categories","noContentOption","bind","onChangeContentRadio","onChangeCategory","setState","filter","_id","event","target","value","getArticles","getArticlesWithContent","e","data","message","toString","getArticlesSuccess","getArticlesError","getWithCategory","getWithContent","getWithContentAndCategory","CategoryService","queryParams","qs","parse","location","search","getCategories","getArticlesWithContentAndCategory","getArticlesWithCategory","onChange","checked","htmlFor","Object","entries","map","i","ArticleCreate","createResponse","handleChangeTitle","handleChangeContent","handleChangeDescription","handleChangeCategory","handleSubmit","newArticle","preventDefault","create","setTimeout","onSubmit","required","rows","role","ArticleView","match","params","getByIdWithContent","getArticleSuccess","getArticleError","getById","style","ArticleViewByTitle","getByTitleWithContent","getByTitle","ArticleEdit","editResponse","handleEditSubmit","edit","CategoryCreate","handleChangeName","newCategory","CategoryDelete","deleteResponse","handleChange","msg","category_id","deleteCategorySuccess","deleteCategoryError","deleteByName","onDeleteByName","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.821bf04d.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\n\nclass ArticleService {\n    get() {\n        return axios.get(`${API_URL}articles/`);\n    }\n\n    getWithCategory(category) {\n        return axios.get(`${API_URL}articles?category=${category}`);\n    }\n\n    getWithContent() {\n        return axios.get(`${API_URL}articles?content=true`);\n    }\n\n    getWithContentAndCategory(category) {\n        return axios.get(`${API_URL}articles?content=true&category=${category}`);\n    }\n\n    getById(id) {\n        return axios.get(`${API_URL}articles/${id}`);\n    }\n\n    getByIdWithContent(id) {\n        return axios.get(`${API_URL}articles/${id}?content=true`);\n    }\n\n    getByTitle(title) {\n        return axios.get(`${API_URL}articles/title/${title}`);\n    }\n\n    getByTitleWithContent(title) {\n        return axios.get(`${API_URL}articles/title/${title}?content=true`);\n    }\n\n    create(article) {\n        return axios.post(`${API_URL}articles/`, article);\n    }\n\n    edit(title, content) {\n        return axios.post(`${API_URL}articles/edit/${title}`, {content: content});\n    }\n\n    deleteById(id) {\n        return axios.delete(`${API_URL}articles/${id}`);\n    }\n\n    deleteByTitle(title) {\n        return axios.delete(`${API_URL}articles/title/${title}`);\n    }\n}\n\nexport default new ArticleService();\n","import React, { Component } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nimport ArticleService from \"../../../services/article.service\";\n\n\nexport default class Article extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onDeleteById() {\n        if (window.confirm(\"Are you sure? This will delete the article and all the data related to it!\")) {\n            ArticleService.deleteById(this.props.id)\n                .then(\n                    response => {\n                        // console.log(response);\n                        this.props.onDeleteArticle(this.props.id);\n                    },\n                    error => {\n                        console.log(error);\n                    }\n\n                )\n        }\n    }\n\n    onDeleteByTitle() {\n        if (window.confirm(\"Are you sure? This will delete the article and all the data related to it!\")) {\n            ArticleService.deleteByTitle(this.props.title)\n                .then(\n                    response => {\n                        this.props.onDeleteArticle(this.props.id);\n                    },\n                    error => {\n                        console.log(error);\n                    }\n\n                )\n        }\n    }\n\n    render() {\n        const  { id, title, content, description, category_name, selectedCategoryName } = this.props;\n\n        return (\n            <div className=\"col-12\">\n                { ((category_name === selectedCategoryName) || (selectedCategoryName === ''))  &&\n                    <div className=\"card mb-4 box-shadow\">\n                        <div className=\"card-header\">\n                            <h5>{title}</h5>\n                            <p className=\"text-right\">{category_name}</p>\n                        </div>\n                        <div className=\"card-body\">\n                            <small className=\"card-text\">{description}</small>\n                            <hr/>\n                            <p>{content}</p>\n                            <div className=\"d-flex justify-content-between align-items-center\">\n                                <div className=\"btn-group\">\n                                    <div className=\"dropdown\">\n                                        <button className=\"tn btn-sm btn-outline-secondary dropdown-toggle\"\n                                                type=\"button\"\n                                                id=\"dropdownView\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                                aria-expanded=\"false\">\n                                            View\n                                        </button>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownView\">\n                                            <Link className=\"dropdown-item\"\n                                                  to={`/articles/${id}`}\n                                            >BY ID (no content)</Link>\n                                            <Link className=\"dropdown-item\"\n                                                  to={`/articles/${id}/?content=true`}\n                                            >BY ID (with content)</Link>\n                                            <Link className=\"dropdown-item\"\n                                                  to={`/articles/title/${title}`}\n                                            >BY TITLE (no content)</Link>\n                                            <Link className=\"dropdown-item\"\n                                                  to={`/articles/title/${title}/?content=true`}\n                                            >BY TITLE (with content)</Link>\n                                        </div>\n                                    </div>\n                                    <Link className=\"btn btn-sm btn-outline-secondary\" type=\"button\"\n                                          to={`/articles/edit/${title}`}\n                                    >Edit\n                                    </Link>\n\n                                    <div className=\"dropdown\">\n                                        <button className=\"tn btn-sm btn-outline-secondary dropdown-toggle\"\n                                                type=\"button\"\n                                                id=\"dropdownDelete\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                                aria-expanded=\"false\">\n                                            Delete\n                                        </button>\n                                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownDelete\">\n                                            <button className=\"dropdown-item\" onClick={() => this.onDeleteById()}\n                                            >By Id\n                                            </button>\n                                            <button className=\"dropdown-item\" onClick={() => this.onDeleteByTitle()}\n                                            >By Title\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n","import axios from 'axios';\n\n\nconst API_URL = process.env.REACT_APP_API_URL;\n\n\nclass CategoryService {\n    get() {\n        return axios.get(`${API_URL}categories/`);\n    }\n\n    create(category) {\n        return axios.post(`${API_URL}categories/`, category);\n    }\n\n    deleteById(id) {\n        return axios.delete(`${API_URL}categories/${id}`);\n    }\n\n    deleteByName(name) {\n        return axios.delete(`${API_URL}categories/name/${name}`);\n    }\n}\n\nexport default new CategoryService();\n","import React, { Component } from \"react\";\n\nimport qs from 'query-string';\n\nimport Article from \"./Article\";\nimport ArticleService from \"../../services/article.service\";\nimport CategoryService from \"../../services/category.service\"\nimport \"./style.css\";\n\n\nexport default class Articles extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            articles: [],\n            categories: [],\n            noContentOption: '',\n            selectedCategoryName: '',\n            error: ''\n        };\n\n        this.onDeleteArticle = this.onDeleteArticle.bind(this);\n        this.onChangeContentRadio = this.onChangeContentRadio.bind(this);\n        this.onChangeCategory = this.onChangeCategory.bind(this);\n    }\n\n    onDeleteArticle(id) {\n        this.setState((state) => {\n            return {\n                articles: state.articles.filter(article => article._id !== id)\n            };\n        });\n    }\n\n    onChangeContentRadio(event) {\n        // console.log(event.target.value);\n        // console.log(this.state.noContentOption);\n        if (event.target.value === 'noContent') {\n            if (!this.state.noContentOption) {\n                this.setState({noContentOption: true});\n                this.getArticles();\n            }\n        } else if (event.target.value === 'withContent') {\n            if (this.state.noContentOption) {\n                this.setState({noContentOption: false});\n                this.getArticlesWithContent();\n            }\n        }\n    }\n\n    onChangeCategory(e) {\n        this.setState({selectedCategoryName: e.target.value});\n    }\n\n    getArticlesSuccess() {\n        return (\n            response => {\n                this.setState({\n                    articles: response.data\n                });\n            }\n        )\n    }\n\n    getArticlesError() {\n        return (\n            error => {\n                this.setState({\n                    error:\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString()\n                });\n            }\n        )\n    }\n\n    getArticles() {\n        ArticleService.get()\n            .then(\n                this.getArticlesSuccess(),\n                this.getArticlesError\n            );\n    }\n\n    getArticlesWithCategory(category) {\n        ArticleService.getWithCategory(category)\n            .then(\n                this.getArticlesSuccess(),\n                this.getArticlesError\n            );\n    }\n\n    getArticlesWithContent() {\n        ArticleService.getWithContent()\n            .then(\n                this.getArticlesSuccess(),\n                this.getArticlesError\n            );\n    }\n\n    getArticlesWithContentAndCategory(category) {\n        ArticleService.getWithContentAndCategory(category)\n            .then(\n                this.getArticlesSuccess(),\n                this.getArticlesError\n            );\n    }\n\n    getCategories() {\n        CategoryService.get()\n            .then(\n                response => {\n                    // console.log(response.data);\n                    this.setState({\n                        categories: response.data\n                    });\n                },\n                error => {\n                    this.setState({\n                        error:\n                            (error.response &&\n                                error.response.data &&\n                                error.response.data.message) ||\n                            error.message ||\n                            error.toString()\n                    });\n                }\n            );\n    }\n\n    componentDidMount() {\n        let queryParams = qs.parse(this.props.location.search);\n\n        this.getCategories();\n\n        if (queryParams.content) {\n            this.setState({noContentOption: false});\n            if (queryParams.category) {\n                this.setState({selectedCategoryName: queryParams.category});\n                this.getArticlesWithContentAndCategory(queryParams.category);\n            } else {\n                this.getArticlesWithContent();\n            }\n        } else {\n            this.setState({noContentOption: true});\n            if (queryParams.category) {\n                this.setState({selectedCategoryName: queryParams.category});\n                this.getArticlesWithCategory(queryParams.category);\n            } else {\n                this.getArticles();\n            }\n        }\n    }\n\n    render() {\n        // console.log(this.props.location.pathname, this.props.location.search);\n        // let searchParams = new URLSearchParams(this.props.location.search);\n        // console.log(searchParams);\n        // searchParams.set('content', 'TRUE');\n        // console.log(searchParams.toString());\n        // this.props.history.push({\n        //     pathname: this.props.location.pathname,\n        //     search: searchParams.toString()\n        // });\n        return (\n            <div className=\"container mt-4\">\n                <div className=\"row\">\n                    <div className=\"col-3 text-left\" onChange={this.onChangeContentRadio}>\n                        <div className=\"col-12\">\n                            <input type=\"radio\" value=\"noContent\" name=\"contentRadios\"\n                                   checked={this.state.noContentOption} /> No Content\n                        </div>\n                        <div className=\"col-12\">\n                            <input type=\"radio\" value=\"withContent\" name=\"contentRadios\"\n                                   checked={!this.state.noContentOption} /> With Content\n                        </div>\n                        <div className=\"col-12 mt-3 form-group\">\n                            <label\n                                htmlFor=\"selectFilterCategory\"\n                            >Category</label>\n                            <select\n                                className=\"col-12 form-control\" id=\"selectFilterCategory\"\n                                value={this.state.selectedCategoryName}\n                                onChange={this.onChangeCategory}\n                            >\n                                <option value=\"\">Please select</option>\n                                {Object.entries(this.state.categories).map(([key, value], i) => {\n                                    return (\n                                        <option key={value._id}>{value.name}</option>\n                                    )\n                                })}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col-9\">\n                        {Object.entries(this.state.articles).map(([key, value], i) => {\n                            return (\n                                <Article\n                                    key={value._id}\n                                    id={value._id}\n                                    title={value.title}\n                                    content={value.content}\n                                    description={value.description}\n                                    category_name={value.category_name}\n                                    selectedCategoryName={this.state.selectedCategoryName}\n                                    onDeleteArticle={this.onDeleteArticle}\n                                />\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\n\nimport ArticleService from \"../../../services/article.service\";\nimport CategoryService from \"../../../services/category.service\";\n\n\nexport default class ArticleCreate extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            content: '',\n            description: '',\n            category_name: '',\n            categories: [],\n            createResponse: '',\n            error: ''\n        };\n\n        this.handleChangeTitle = this.handleChangeTitle.bind(this);\n        this.handleChangeContent = this.handleChangeContent.bind(this);\n        this.handleChangeDescription = this.handleChangeDescription.bind(this);\n        this.handleChangeCategory = this.handleChangeCategory.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChangeTitle(event) {\n        this.setState({title: event.target.value});\n    }\n\n    handleChangeContent(event) {\n        this.setState({content: event.target.value});\n    }\n\n    handleChangeDescription(event) {\n        this.setState({description: event.target.value});\n    }\n\n    handleChangeCategory(event) {\n        this.setState({category_name: event.target.value});\n    }\n\n    handleSubmit(event) {\n        let newArticle;\n\n        if (this.state.description) {\n            newArticle = {title: this.state.title, content: this.state.content,\n                description: this.state.description, category_name: this.state.category_name};\n        } else {\n            newArticle = {title: this.state.title, content: this.state.content,\n                category_name: this.state.category_name};\n        }\n        event.preventDefault();\n\n        ArticleService.create(newArticle).then(\n            () => {\n                this.setState({\n                    title: '',\n                    content: '',\n                    description: '',\n                    category_name: '',\n                    createResponse: 'SUCCESS'\n                });\n                setTimeout(\n                    () => this.setState({ createResponse: '' }),\n                    3000\n                );\n            },\n            error => {\n                this.setState({\n                    createResponse: 'ERROR',\n                    error:\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString()\n                });\n                setTimeout(\n                    () => this.setState({ createResponse: '' }),\n                    3000\n                );\n            }\n        );\n    }\n\n    getCategories() {\n        CategoryService.get()\n            .then(\n                response => {\n                    // console.log(response.data);\n                    this.setState({\n                        categories: response.data\n                    });\n                },\n                error => {\n                    this.setState({\n                        error:\n                            (error.response &&\n                                error.response.data &&\n                                error.response.data.message) ||\n                            error.message ||\n                            error.toString()\n                    });\n                }\n            );\n    }\n\n    componentDidMount() {\n        this.getCategories();\n    }\n\n    render() {\n        return (\n            <div className=\"container mt-3\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4 className=\"mb-0\">Create Article</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.handleSubmit}>\n                                    <div className=\"form-group row\">\n                                        <label\n                                            className=\"col-3 col-form-label form-control-label\"\n                                            htmlFor=\"create_title\"\n                                        >Title</label>\n                                        <input\n                                            className=\"form-control col-8\" type=\"text\" id=\"create_title\" required\n                                            value={this.state.title} onChange={this.handleChangeTitle} />\n                                    </div>\n                                    <div className=\"form-group row\">\n                                        <label\n                                            className=\"col-3 col-form-label form-control-label mt-4\"\n                                            htmlFor=\"create_content\"\n                                        >Content</label>\n                                        <textarea\n                                            className=\"form-control col-8\" id=\"create_content\" rows=\"3\" required\n                                            value={this.state.content} onChange={this.handleChangeContent} />\n                                    </div>\n                                    <div className=\"form-group row\">\n                                        <label\n                                            className=\"col-3 col-form-label form-control-label mt-4\"\n                                            htmlFor=\"create_description\"\n                                        >Description</label>\n                                        <textarea\n                                            className=\"form-control col-8\" id=\"create_description\" rows=\"3\"\n                                            value={this.state.description} onChange={this.handleChangeDescription} />\n                                    </div>\n                                    <div className=\"form-group row\">\n                                        <label\n                                            className=\"col-3 col-form-label form-control-label\"\n                                            htmlFor=\"selectCategoryCreateArticle\"\n                                        >Category</label>\n                                        <select\n                                            className=\"form-control col-8\" id=\"selectCategoryCreateArticle\"\n                                            value={this.state.category_name}\n                                            onChange={this.handleChangeCategory}\n                                        >\n                                            <option value=\"\">Please select</option>\n                                            {Object.entries(this.state.categories).map(([key, value], i) => {\n                                                return (\n                                                    <option key={value._id}>{value.name}</option>\n                                                )\n                                            })}\n                                        </select>\n                                    </div>\n                                    <button className=\"btn btn-primary mt-2\" type=\"submit\">Submit</button>\n                                    {this.state.createResponse === 'SUCCESS' &&\n                                        <div className=\"alert alert-success alert-dismissible fade show mt-2\" role=\"alert\">\n                                            <p className=\"text-center\">Created successfully!</p>\n                                        </div>\n                                    }\n                                    {this.state.createResponse === 'ERROR' &&\n                                        <div className=\"alert alert-danger alert-dismissible fade show mt-2\" role=\"alert\">\n                                            <p className=\"text-center\">{this.state.error}</p>\n                                        </div>\n                                    }\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport qs from 'query-string';\n\nimport ArticleService from \"../../../services/article.service\";\n\n\nexport class ArticleView extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: '',\n            title: '',\n            content: '',\n            description: '',\n            category_name: '',\n            error: ''\n        };\n    }\n\n    getArticleSuccess() {\n        return (\n            response => {\n                this.setState({\n                    id: response.data._id,\n                    title: response.data.title,\n                    content: response.data.content,\n                    description: response.data.description,\n                    category_name: response.data.category_name\n                });\n            }\n        )\n    }\n\n    getArticleError() {\n        return (\n            error => {\n                this.setState({\n                    error:\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString()\n                });\n            }\n        )\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        let queryParams = qs.parse(this.props.location.search);\n\n        if (queryParams.content) {\n            ArticleService.getByIdWithContent(id)\n                .then(\n                    this.getArticleSuccess(),\n                    this.getArticleError()\n                );\n        } else {\n            ArticleService.getById(id)\n                .then(\n                    this.getArticleSuccess(),\n                    this.getArticleError()\n                );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h1>{this.state.title}</h1>\n                    </div>\n                    <div className=\"col-12\">\n                        <p className=\"text-right\">{this.state.category_name}</p>\n                    </div>\n                    <div className=\"col-12\">\n                        <small>{this.state.description}</small>\n                    </div>\n                    {(this.state.content) &&\n                    <div className=\"col-12\">\n                        <hr/>\n                    </div>\n                    }\n                    {(this.state.content) &&\n                    <div className=\"col-12\">\n                        <p style={{'word-wrap': 'break-word'}}>{this.state.content}</p>\n                    </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport class ArticleViewByTitle extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: '',\n            title: '',\n            content: '',\n            description: '',\n            category_name: '',\n            error: ''\n        };\n    }\n\n    getArticleSuccess() {\n        return (\n            response => {\n                this.setState({\n                    id: response.data[0]._id,\n                    title: response.data[0].title,\n                    content: response.data[0].content,\n                    description: response.data[0].description,\n                    category_name: response.data[0].category_name\n                });\n            }\n        )\n    }\n\n    getArticleError() {\n        return (\n            error => {\n                this.setState({\n                    error:\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString()\n                });\n            }\n        )\n    }\n\n    componentDidMount() {\n        const { title } = this.props.match.params;\n        let queryParams = qs.parse(this.props.location.search);\n\n        if (queryParams.content) {\n            ArticleService.getByTitleWithContent(title)\n                .then(\n                    this.getArticleSuccess(),\n                    this.getArticleError()\n                );\n        } else {\n            ArticleService.getByTitle(title)\n                .then(\n                    this.getArticleSuccess(),\n                    this.getArticleError()\n                );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h1>{this.state.title}</h1>\n                    </div>\n                    <div className=\"col-12\">\n                        <p className=\"text-right\">{this.state.category_name}</p>\n                    </div>\n                    <div className=\"col-12\">\n                        <small>{this.state.description}</small>\n                    </div>\n                    {(this.state.content) &&\n                    <div className=\"col-12\">\n                        <hr/>\n                    </div>\n                    }\n                    {(this.state.content) &&\n                    <div className=\"col-12\">\n                        <p style={{'word-wrap': 'break-word'}}>{this.state.content}</p>\n                    </div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport ArticleService from \"../../../services/article.service\";\n\n\nexport default class ArticleEdit extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: '',\n            title: '',\n            content: '',\n            description: '',\n            category_name: '',\n            editResponse: '',\n            error: ''\n        };\n\n        this.handleChangeContent = this.handleChangeContent.bind(this);\n        this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    }\n\n    handleChangeContent(event) {\n        this.setState({content: event.target.value});\n    }\n\n    handleEditSubmit(event) {\n        const { title } = this.props.match.params;\n        event.preventDefault();\n\n        ArticleService.edit(title, this.state.content)\n            .then(\n                response => {\n                    this.setState({\n                        id: response.data._id,\n                        title: response.data.title,\n                        content: response.data.content,\n                        description: response.data.description,\n                        category_name: response.data.category_name,\n                        editResponse: 'SUCCESS'\n                    });\n                    setTimeout(\n                        () => this.setState({ editResponse: '' }),\n                        3000\n                    );\n                },\n                error => {\n                    this.setState({\n                        editResponse: 'ERROR',\n                        error:\n                            (error.response &&\n                                error.response.data &&\n                                error.response.data.message) ||\n                            error.message ||\n                            error.toString()\n                    });\n                    setTimeout(\n                        () => this.setState({ editResponse: '' }),\n                        3000\n                    );\n                }\n\n            )\n    }\n\n    componentDidMount() {\n        const { title } = this.props.match.params;\n\n        ArticleService.getByTitleWithContent(title)\n            .then(\n                this.getArticleSuccess(),\n                this.getArticleError()\n            )\n    }\n\n    getArticleSuccess() {\n        return (\n            response => {\n                this.setState({\n                    id: response.data[0]._id,\n                    title: response.data[0].title,\n                    content: response.data[0].content,\n                    description: response.data[0].description,\n                    category_name: response.data[0].category_name\n                });\n            }\n        )\n    }\n\n    getArticleError() {\n        return (\n            error => {\n                this.setState({\n                    error:\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString()\n                });\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h1>{this.state.title}</h1>\n                    </div>\n                    <div className=\"col-12\">\n                        <p className=\"text-right\">{this.state.category_name}</p>\n                    </div>\n                    <div className=\"col-12\">\n                        <small>{this.state.description}</small>\n                    </div>\n                    <div className=\"col-12\">\n                        <hr/>\n                    </div>\n                    <form className=\"col-12\" onSubmit={this.handleEditSubmit}>\n                        <div className=\"form-group\">\n                            <textarea className=\"form-control\" rows=\"10\"\n                                      value={this.state.content} onChange={this.handleChangeContent} />\n                        </div>\n                        <button className=\"btn btn-primary\" type=\"submit\">Save</button>\n                        {this.state.editResponse === 'SUCCESS' &&\n                            <div className=\"alert alert-success alert-dismissible fade show mt-2\" role=\"alert\">\n                                <p className=\"text-center\">Saved successfully!</p>\n                            </div>\n                        }\n                        {this.state.editResponse === 'ERROR' &&\n                            <div className=\"alert alert-danger alert-dismissible fade show mt-2\" role=\"alert\">\n                                <p className=\"text-center\">{this.state.error}</p>\n                            </div>\n                        }\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport CategoryService from \"../../../services/category.service\";\n\n\nexport default class CategoryCreate extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            createResponse: '',\n            error: ''\n        };\n\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChangeName(event) {\n        this.setState({name: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const newCategory = {name: this.state.name};\n\n        CategoryService.create(newCategory).then(\n            () => {\n                this.setState({\n                    name: '',\n                    createResponse: 'SUCCESS'\n                });\n                setTimeout(\n                    () => this.setState({ createResponse: '' }),\n                    3000\n                );\n            },\n            error => {\n                this.setState({\n                    createResponse: 'ERROR',\n                    error:\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString()\n                });\n                setTimeout(\n                    () => this.setState({ createResponse: '' }),\n                    3000\n                );\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"container mt-3\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4 className=\"mb-0\">Create Category</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.handleSubmit}>\n                                    <div className=\"form-group row\">\n                                        <label\n                                            className=\"col-3 col-form-label form-control-label\"\n                                            htmlFor=\"create_name\"\n                                        >Name</label>\n                                        <input\n                                            className=\"form-control col-8\" type=\"text\" id=\"create_name\" required\n                                            value={this.state.name} onChange={this.handleChangeName} />\n                                    </div>\n                                    <button className=\"btn btn-primary mt-2\" type=\"submit\">Submit</button>\n                                    {this.state.createResponse === 'SUCCESS' &&\n                                        <div className=\"alert alert-success alert-dismissible fade show mt-2\" role=\"alert\">\n                                            <p className=\"text-center\">Created successfully!</p>\n                                        </div>\n                                    }\n                                    {this.state.createResponse === 'ERROR' &&\n                                        <div className=\"alert alert-danger alert-dismissible fade show mt-2\" role=\"alert\">\n                                            <p className=\"text-center\">{this.state.error}</p>\n                                        </div>\n                                    }\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport CategoryService from \"../../../services/category.service\";\n\n\nexport default class CategoryDelete extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            categories: [],\n            selectedCategoryName: '',\n            deleteResponse: '',\n            error: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    getCategories() {\n        CategoryService.get()\n            .then(\n                response => {\n                    console.log(response.data);\n                    this.setState({\n                        categories: response.data\n                    });\n                },\n                error => {\n                    this.setState({\n                        error:\n                            (error.response &&\n                                error.response.data &&\n                                error.response.data.message) ||\n                            error.message ||\n                            error.toString()\n                    });\n                }\n            );\n    }\n\n    handleChange(e) {\n        this.setState({\n            selectedCategoryName: e.target.value\n        });\n    }\n\n    componentDidMount() {\n        this.getCategories();\n    }\n\n    deleteCategorySuccess() {\n        return (\n            response => {\n                this.setState((state) => {\n                    return {\n                        deleteResponse: 'SUCCESS',\n                        categories: state.categories.filter(category => category._id !== response.data.msg._id)\n                    };\n                });\n                setTimeout(\n                    () => this.setState({ deleteResponse: '' }),\n                    3000\n                );\n            }\n        )\n    }\n\n    deleteCategoryError() {\n        return (\n            error => {\n                this.setState({\n                    deleteResponse: 'ERROR',\n                    error:\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString()\n                });\n                setTimeout(\n                    () => this.setState({ deleteResponse: '' }),\n                    3000\n                );\n            }\n        )\n    }\n\n    onDeleteById() {\n        if (!this.state.selectedCategoryName) {\n            return\n        }\n        const category = this.state.categories.filter(category => category.name === this.state.selectedCategoryName);\n        const category_id = category[0]._id;\n\n        if (window.confirm(\"Are you sure? This will delete the category and all the data related to it!\")) {\n            CategoryService.deleteById(category_id)\n                .then(\n                    this.deleteCategorySuccess(),\n                    this.deleteCategoryError()\n                )\n        }\n    }\n\n    onDeleteByName() {\n        if (!this.state.selectedCategoryName) {\n            return\n        }\n        if (window.confirm(\"Are you sure? This will delete the category and all the data related to it!\")) {\n            CategoryService.deleteByName(this.state.selectedCategoryName)\n                .then(\n                    this.deleteCategorySuccess(),\n                    this.deleteCategoryError()\n                )\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container mt-3\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-6\">\n                        <div className=\"card\">\n                            <div className=\"card-header\">\n                                <h4 className=\"mb-0\">Delete Category</h4>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"form-group row\">\n                                    <label\n                                        className=\"col-3 col-form-label form-control-label\"\n                                        htmlFor=\"selectDeleteCategory\"\n                                    >Category</label>\n                                    <select\n                                        className=\"col-8 form-control\" id=\"selectDeleteCategory\"\n                                        value={this.state.selectedCategoryName}\n                                        onChange={this.handleChange}\n                                    >\n                                        <option value=\"\">Please select</option>\n                                        {Object.entries(this.state.categories).map(([key, value], i) => {\n                                            return (\n                                                <option key={value._id}>{value.name}</option>\n                                            )\n                                        })}\n                                    </select>\n                                </div>\n                                <div className=\"dropdown\">\n                                    <button className=\"btn btn-primary mt-2 dropdown-toggle\" type=\"button\"\n                                            id=\"dropdownCategoryDelete\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\n                                            aria-expanded=\"false\">\n                                        Delete\n                                    </button>\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"dropdownCategoryDelete\">\n                                        <button className=\"dropdown-item\" onClick={() => this.onDeleteById()}\n                                        >By Id</button>\n                                        <button className=\"dropdown-item\" onClick={() => this.onDeleteByName()}\n                                        >By Name</button>\n                                    </div>\n                                </div>\n                                {this.state.deleteResponse === 'SUCCESS' &&\n                                    <div className=\"alert alert-success alert-dismissible fade show mt-2\" role=\"alert\">\n                                        <p className=\"text-center\">Deleted successfully!</p>\n                                    </div>\n                                }\n                                {this.state.deleteResponse === 'ERROR' &&\n                                    <div className=\"alert alert-danger alert-dismissible fade show mt-2\" role=\"alert\">\n                                        <p className=\"text-center\">{this.state.error}</p>\n                                    </div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Articles from \"./components/Articles\"\nimport ArticleCreate from \"./components/Articles/create\";\nimport { ArticleView, ArticleViewByTitle } from \"./components/Articles/view\";\nimport ArticleEdit from \"./components/Articles/edit\";\nimport CategoryCreate from \"./components/Categories/create\";\nimport CategoryDelete from \"./components/Categories/delete\";\nimport \"./App.css\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <Router>\n          <div className=\"App\">\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n              <Link to={\"/\"} className=\"navbar-brand\">\n                Blog\n              </Link>\n              <div className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                  <Link to={\"/articles\"} className=\"nav-link\">\n                    Articles\n                  </Link>\n                </li>\n              </div>\n              <div className=\"dropdown\">\n                <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                >Admin actions</button>\n                <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                  <Link to={\"/admin/create_article\"} className=\"dropdown-item\"\n                  >Create Article</Link>\n                  <Link to={\"/admin/create_category\"} className=\"dropdown-item\"\n                  >Create Category</Link>\n                  <Link to={\"/admin/delete_category\"} className=\"dropdown-item\"\n                  >Delete Category</Link>\n                </div>\n              </div>\n            </nav>\n\n            <Route exact path={[\"/\", \"/articles\"]} component={Articles}/>\n            <Route exact path={[\"/articles/:id\"]} component={ArticleView}/>\n            <Route exact path={[\"/articles/title/:title\"]} component={ArticleViewByTitle}/>\n            <Route exact path={[\"/articles/edit/:title\"]} component={ArticleEdit}/>\n            <Route exact path={[\"/admin/create_article\"]} component={ArticleCreate}/>\n            <Route exact path={[\"/admin/create_category\"]} component={CategoryCreate}/>\n            <Route exact path={[\"/admin/delete_category\"]} component={CategoryDelete}/>\n\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}